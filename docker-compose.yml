# Docker Compose for Creative Identity Platform Development Environment\nversion: '3.8'\n\nservices:\n  # Main Application\n  app:\n    build:\n      context: .\n      target: development\n    container_name: creative-identity-app\n    ports:\n      - \"3000:3000\"\n      - \"9229:9229\" # Node.js debugging port\n    environment:\n      - NODE_ENV=development\n      - DATABASE_URL=postgresql://postgres:password@postgres:5432/creative_identity_dev\n      - REDIS_URL=redis://redis:6379\n      - IPFS_NODE_URL=http://ipfs:5001\n      - POLYGON_RPC_URL=http://hardhat:8545\n      - STRIPE_SECRET_KEY=sk_test_development_key\n      - JWT_SECRET=dev_jwt_secret_change_in_production\n    volumes:\n      - .:/app\n      - /app/node_modules\n      - /app/.next\n    depends_on:\n      - postgres\n      - redis\n      - hardhat\n      - ipfs\n    networks:\n      - creative-identity\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000/api/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n  \n  # PostgreSQL Database\n  postgres:\n    image: postgres:15-alpine\n    container_name: creative-identity-postgres\n    ports:\n      - \"5432:5432\"\n    environment:\n      - POSTGRES_DB=creative_identity_dev\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=password\n      - POSTGRES_INITDB_ARGS=--encoding=UTF-8\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./database/init:/docker-entrypoint-initdb.d\n    networks:\n      - creative-identity\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n  \n  # Redis for caching and session management\n  redis:\n    image: redis:7-alpine\n    container_name: creative-identity-redis\n    ports:\n      - \"6379:6379\"\n    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru\n    volumes:\n      - redis_data:/data\n      - ./redis/redis.conf:/etc/redis/redis.conf\n    networks:\n      - creative-identity\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 3s\n      retries: 3\n  \n  # TimescaleDB for analytics\n  timescaledb:\n    image: timescale/timescaledb:latest-pg15\n    container_name: creative-identity-timescale\n    ports:\n      - \"5433:5432\"\n    environment:\n      - POSTGRES_DB=creative_identity_analytics\n      - POSTGRES_USER=timescale\n      - POSTGRES_PASSWORD=password\n    volumes:\n      - timescale_data:/var/lib/postgresql/data\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Hardhat for local blockchain development\n  hardhat:\n    image: node:18-alpine\n    container_name: creative-identity-hardhat\n    working_dir: /app\n    ports:\n      - \"8545:8545\"\n    command: sh -c \"npm install -g hardhat && npx hardhat node --hostname 0.0.0.0\"\n    volumes:\n      - .:/app\n      - hardhat_cache:/app/cache\n    networks:\n      - creative-identity\n    restart: unless-stopped\n    environment:\n      - NODE_ENV=development\n  \n  # IPFS for decentralized storage\n  ipfs:\n    image: ipfs/go-ipfs:latest\n    container_name: creative-identity-ipfs\n    ports:\n      - \"4001:4001\" # Swarm port\n      - \"5001:5001\" # API port\n      - \"8080:8080\" # Gateway port\n    volumes:\n      - ipfs_data:/data/ipfs\n    networks:\n      - creative-identity\n    restart: unless-stopped\n    environment:\n      - IPFS_PROFILE=server\n  \n  # Nginx for load balancing and SSL termination\n  nginx:\n    image: nginx:alpine\n    container_name: creative-identity-nginx\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf\n      - ./nginx/ssl:/etc/nginx/ssl\n    depends_on:\n      - app\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # WebSocket service for real-time features\n  websocket:\n    build:\n      context: .\n      target: development\n    container_name: creative-identity-websocket\n    ports:\n      - \"3001:3001\"\n    environment:\n      - NODE_ENV=development\n      - REDIS_URL=redis://redis:6379\n      - DATABASE_URL=postgresql://postgres:password@postgres:5432/creative_identity_dev\n      - WEBSOCKET_PORT=3001\n    command: node src/services/websocket.js\n    volumes:\n      - .:/app\n      - /app/node_modules\n    depends_on:\n      - redis\n      - postgres\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Background job processor\n  worker:\n    build:\n      context: .\n      target: development\n    container_name: creative-identity-worker\n    environment:\n      - NODE_ENV=development\n      - REDIS_URL=redis://redis:6379\n      - DATABASE_URL=postgresql://postgres:password@postgres:5432/creative_identity_dev\n      - POLYGON_RPC_URL=http://hardhat:8545\n    command: node src/services/worker.js\n    volumes:\n      - .:/app\n      - /app/node_modules\n    depends_on:\n      - redis\n      - postgres\n      - hardhat\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Monitoring with Prometheus\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: creative-identity-prometheus\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--storage.tsdb.retention.time=200h'\n      - '--web.enable-lifecycle'\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Grafana for metrics visualization\n  grafana:\n    image: grafana/grafana:latest\n    container_name: creative-identity-grafana\n    ports:\n      - \"3001:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards\n      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources\n    depends_on:\n      - prometheus\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Elasticsearch for logging\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0\n    container_name: creative-identity-elasticsearch\n    ports:\n      - \"9200:9200\"\n      - \"9300:9300\"\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    volumes:\n      - elasticsearch_data:/usr/share/elasticsearch/data\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Kibana for log visualization\n  kibana:\n    image: docker.elastic.co/kibana/kibana:8.11.0\n    container_name: creative-identity-kibana\n    ports:\n      - \"5601:5601\"\n    environment:\n      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200\n    depends_on:\n      - elasticsearch\n    networks:\n      - creative-identity\n    restart: unless-stopped\n  \n  # Mailhog for email testing\n  mailhog:\n    image: mailhog/mailhog:latest\n    container_name: creative-identity-mailhog\n    ports:\n      - \"8025:8025\" # Web UI\n      - \"1025:1025\" # SMTP\n    networks:\n      - creative-identity\n    restart: unless-stopped\n\n# Named volumes for data persistence\nvolumes:\n  postgres_data:\n  redis_data:\n  timescale_data:\n  ipfs_data:\n  hardhat_cache:\n  prometheus_data:\n  grafana_data:\n  elasticsearch_data:\n\n# Network configuration\nnetworks:\n  creative-identity:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.20.0.0/16"