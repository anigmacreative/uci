import { HardhatUserConfig } from \"hardhat/config\";\nimport \"@nomicfoundation/hardhat-toolbox\";\nimport \"@nomiclabs/hardhat-ethers\";\nimport \"hardhat-deploy\";\nimport \"hardhat-gas-reporter\";\nimport \"solidity-coverage\";\nimport * as dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst config: HardhatUserConfig = {\n  solidity: {\n    version: \"0.8.19\",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200,\n      },\n      viaIR: true,\n    },\n  },\n  \n  networks: {\n    hardhat: {\n      chainId: 31337,\n      gas: 12000000,\n      blockGasLimit: 0x1fffffffffffff,\n      allowUnlimitedContractSize: true,\n      timeout: 1800000,\n    },\n    \n    localhost: {\n      url: \"http://127.0.0.1:8545\",\n      chainId: 31337,\n    },\n    \n    // Polygon Mainnet\n    polygon: {\n      url: process.env.POLYGON_RPC_URL || \"https://polygon-rpc.com\",\n      accounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n      chainId: 137,\n      gas: 2100000,\n      gasPrice: 8000000000, // 8 gwei\n    },\n    \n    // Polygon Mumbai Testnet\n    mumbai: {\n      url: process.env.MUMBAI_RPC_URL || \"https://rpc-mumbai.maticvigil.com\",\n      accounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n      chainId: 80001,\n      gas: 2100000,\n      gasPrice: 8000000000,\n    },\n    \n    // Ethereum Mainnet\n    ethereum: {\n      url: process.env.ETHEREUM_RPC_URL || \"https://mainnet.infura.io/v3/YOUR_PROJECT_ID\",\n      accounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n      chainId: 1,\n      gas: 2100000,\n      gasPrice: 20000000000, // 20 gwei\n    },\n    \n    // Ethereum Goerli Testnet\n    goerli: {\n      url: process.env.GOERLI_RPC_URL || \"https://goerli.infura.io/v3/YOUR_PROJECT_ID\",\n      accounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n      chainId: 5,\n      gas: 2100000,\n      gasPrice: 10000000000, // 10 gwei\n    },\n  },\n  \n  namedAccounts: {\n    deployer: {\n      default: 0, // Use first account as deployer\n    },\n    creator: {\n      default: 1, // Use second account as test creator\n    },\n    user: {\n      default: 2, // Use third account as test user\n    },\n  },\n  \n  etherscan: {\n    apiKey: {\n      polygon: process.env.POLYGONSCAN_API_KEY || \"\",\n      polygonMumbai: process.env.POLYGONSCAN_API_KEY || \"\",\n      mainnet: process.env.ETHERSCAN_API_KEY || \"\",\n      goerli: process.env.ETHERSCAN_API_KEY || \"\",\n    },\n  },\n  \n  gasReporter: {\n    enabled: process.env.REPORT_GAS !== undefined,\n    currency: \"USD\",\n    gasPrice: 21,\n    coinmarketcap: process.env.COINMARKETCAP_API_KEY,\n  },\n  \n  typechain: {\n    outDir: \"src/types/contracts\",\n    target: \"ethers-v6\",\n  },\n  \n  paths: {\n    sources: \"./contracts\",\n    tests: \"./test\",\n    cache: \"./cache\",\n    artifacts: \"./artifacts\",\n    deploy: \"./deploy\",\n  },\n  \n  mocha: {\n    timeout: 40000,\n  },\n};\n\nexport default config;