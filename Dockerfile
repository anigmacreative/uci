# Multi-stage Dockerfile for Creative Identity Platform\n# Production-optimized with security best practices\n\n# Stage 1: Base dependencies\nFROM node:18-alpine AS deps\nWORKDIR /app\n\n# Install system dependencies for blockchain and biometric features\nRUN apk add --no-cache \\\n    libc6-compat \\\n    python3 \\\n    make \\\n    g++ \\\n    git \\\n    curl \\\n    openssh-client\n\n# Copy package files\nCOPY package.json package-lock.json* ./\n\n# Install dependencies\nRUN npm ci --only=production && npm cache clean --force\n\n# Stage 2: Build stage\nFROM node:18-alpine AS builder\nWORKDIR /app\n\n# Copy dependencies from deps stage\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Set environment variables for build\nENV NODE_ENV=production\nENV NEXT_TELEMETRY_DISABLED=1\n\n# Install dev dependencies for build\nRUN npm install --only=development\n\n# Build the application\nRUN npm run build\n\n# Stage 3: Blockchain contracts compilation\nFROM node:18-alpine AS contracts\nWORKDIRL /app\n\n# Copy contract files and hardhat config\nCOPY contracts ./contracts\nCOPY hardhat.config.ts ./\nCOPY package.json ./\n\n# Install hardhat dependencies\nRUN npm install hardhat @nomiclabs/hardhat-ethers @openzeppelin/contracts\n\n# Compile smart contracts\nRUN npx hardhat compile\n\n# Stage 4: Production runtime\nFROM node:18-alpine AS runner\nWORKDIR /app\n\n# Create non-root user for security\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\n# Install runtime dependencies\nRUN apk add --no-cache \\\n    dumb-init \\\n    curl \\\n    ca-certificates\n\n# Copy built application\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/.next/standalone ./\nCOPY --from=builder /app/.next/static ./.next/static\nCOPY --from=contracts /app/artifacts ./artifacts\n\n# Copy AI models for biometric verification\nRUN mkdir -p /app/models\nCOPY models/ ./models/\n\n# Set correct permissions\nRUN chown -R nextjs:nodejs /app\nRUN chmod -R 755 /app\n\n# Security: Remove unnecessary packages and files\nRUN rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/* \\\n    && rm -rf /root/.npm\n\n# Switch to non-root user\nUSER nextjs\n\n# Expose port\nEXPOSE 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:3000/api/health || exit 1\n\n# Set environment variables\nENV NODE_ENV=production\nENV PORT=3000\nENV HOSTNAME=0.0.0.0\nENV NEXT_TELEMETRY_DISABLED=1\n\n# Use dumb-init to handle signals properly\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"node\", \"server.js\"]\n\n# Development stage for local development\nFROM node:18-alpine AS development\nWORKDIR /app\n\n# Install system dependencies\nRUN apk add --no-cache \\\n    libc6-compat \\\n    python3 \\\n    make \\\n    g++ \\\n    git \\\n    curl \\\n    openssh-client\n\n# Copy package files\nCOPY package.json package-lock.json* ./\n\n# Install all dependencies (including dev)\nRUN npm install\n\n# Copy source code\nCOPY . .\n\n# Create development user\nRUN addgroup --system --gid 1001 devuser\nRUN adduser --system --uid 1001 devuser\nUSER devuser\n\nEXPOSE 3000\n\n# Development command\nCMD [\"npm\", \"run\", \"dev\"]"